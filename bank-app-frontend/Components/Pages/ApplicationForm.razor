@page "/"
@layout ApplicationFormLayout
@using Models
@using Services
@using bank_app_frontend.Components.Layout
@using MudBlazor
@inject ApplicantService applicantService;
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="container">
    <div class="text">
        Application Form
    </div>
    <form @onsubmit="SubmitForm">
        <div class="form-row">
            <div class="input-data">
                <input type="text" required @bind="applicant.ApplicateName">
                <div class="underline"></div>
                <label for="">Name</label>
            </div>
            <div class="input-data">
                <input type="text" required @bind="applicant.Address">
                <div class="underline"></div>
                <label for="">Address</label>
            </div>
        </div>
        <div class="form-row">
            <div class="input-data">
                <input type="email" required @bind="applicant.EmailAddress">
                <div class="underline"></div>
                <label for="">Email address</label>
                <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
            </div>
            <div class="input-data">
                <input type="text" required @bind="applicant.CNIC">
                <div class="underline"></div>
                <label for="">CNIC</label>
            </div>
        </div>
        <div class="form-row">
            <div class="input-data">
                <label class="data" for="">Date Of Birth</label>
                <InputDate  @bind-Value="@applicant.DOB" />
            </div>
            <div class="input-data">
                <label class="data" for="">Account Type</label>
                <InputSelect TValue="AccountType" @bind-Value="applicant.AccountType">
                    @foreach (AccountType type in Enum.GetValues(typeof(AccountType)))
                    {
                        <option value="@type">@type</option>
                    }
                </InputSelect>
            </div>
        </div>
    
       
 
        <div class="form-row">
            <div class="input-data textarea">
                <div class="form-row submit-btn">
                    <div class="input-data">
                        <div class="inner"></div>
                        <input type="submit" value="Submit">
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@code
{
    Applicant applicant = new Applicant();
    DateTime? selectedDate;

    String DOB;

    private void SubmitForm()
    {
        int accountType;
        if (applicant.AccountType == AccountType.CURRENT)
        {
            accountType = 0;
        }
        else if (applicant.AccountType == AccountType.SAVING)
        {
            accountType = 1;
        }
        else
        {
            accountType = 2;
        }
        UpdateApplicantList(applicant.ApplicateName, applicant.Address, applicant.CNIC, applicant.DOB, applicant.EmailAddress, accountType);
        // Form submission logic

        // Redirect to the desired page
        NavigationManager.NavigateTo("Home"); // Change "/submitted" to the desired route

    }

    public async Task UpdateApplicantList(string ApplicateName, string Address, string CNIC, DateOnly DOB, string Email, int AccountType)
    {
        await applicantService.UpdateApplicantList(ApplicateName, Address, CNIC, DOB, Email, AccountType);

    }
}
